{"version":3,"sources":["../src/AddBtn.tsx","../src/TodoInput.tsx","../src/ErrorBoundary.tsx","../src/TodoList.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, FC } from \"react\";\n\nexport const AddBtn: FC<ButtonHTMLAttributes<HTMLButtonElement>> = (props) => {\n  return <button {...props}>추가</button>;\n};\n","import React, { FC, useRef } from \"react\";\n\ninterface TodoInputProps {\n  onSubmit: (todo: string) => void;\n}\n\nexport const TodoInput: FC<TodoInputProps> = ({ onSubmit }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleClickButton = () => {\n    if (!inputRef.current?.value) return;\n\n    onSubmit(inputRef.current?.value);\n    inputRef.current.value = \"\";\n  };\n\n  return (\n    <div className=\"todo-input-container\">\n      <div className=\"todo-input-box\">\n        <input\n          type=\"text\"\n          placeholder=\"할 일을 입력하세요\"\n          onKeyUp={(e) => {\n            if (e.code === \"Enter\") {\n              handleClickButton();\n            }\n          }}\n          ref={inputRef}\n        />\n      </div>\n\n      <button\n        className=\"todo-add-btn\"\n        type=\"button\"\n        onClick={handleClickButton}\n      >\n        +\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  state: { hasError: boolean };\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return (this.props as any).children;\n  }\n}\n","import React, { FC } from \"react\";\nimport { Todo } from \"./type\";\n\ninterface TodoListProps {\n  todos: Todo[];\n  onCheck: (isChecked: any, todo: Todo) => void;\n}\n\nexport const TodoList: FC<TodoListProps> = ({ todos, onCheck }) => {\n  return (\n    <ul>\n      {todos.map((todo, i) => (\n        <li key={i}>\n          <input\n            type=\"checkbox\"\n            id={`cbx-${todo.id}`}\n            checked={!!todo.isDone}\n            onChange={(e) => {\n              onCheck(e.target.checked, todo);\n            }}\n            hidden\n          />\n          <label htmlFor={`cbx-${todo.id}`} className=\"check\">\n            <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 18 18\">\n              <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\"></path>\n              <polyline points=\"1 9 7 14 15 4\"></polyline>\n            </svg>\n            <span>{todo.name}</span>\n          </label>\n        </li>\n      ))}\n    </ul>\n  );\n};\n"],"mappings":"aAAA,qBAEO,GAAM,GAAsD,AAAC,GAC3D,gBAAC,UAAQ,GAAG,GAAO,cAAE,ECH9B,kCAMO,GAAM,GAAgC,CAAC,CAAE,cAAe,CAC7D,GAAM,GAAW,EAAyB,IAAI,EAExC,EAAoB,IAAM,CATlC,QAUI,AAAI,CAAC,MAAS,UAAT,QAAkB,QAEvB,GAAS,KAAS,UAAT,cAAkB,KAAK,EAChC,EAAS,QAAQ,MAAQ,GAC3B,EAEA,MACE,iBAAC,OAAI,UAAU,wBACb,gBAAC,OAAI,UAAU,kBACb,gBAAC,SACC,KAAK,OACL,YAAY,qDACZ,QAAS,AAAC,GAAM,CACd,AAAI,EAAE,OAAS,SACb,EAAkB,CAEtB,EACA,IAAK,EACP,CACF,EAEA,gBAAC,UACC,UAAU,eACV,KAAK,SACL,QAAS,GACV,GAED,CACF,CAEJ,ECxCA,qBAEO,GAAM,GAAN,aAA4B,GAAM,SAAU,CACjD,MACA,YAAY,EAAY,CACtB,MAAM,CAAK,EACX,KAAK,MAAQ,CAAE,SAAU,EAAM,CACjC,CAEA,MAAO,0BAAyB,EAAY,CAE1C,MAAO,CAAE,SAAU,EAAK,CAC1B,CAEA,kBAAkB,EAAY,EAAgB,CAG5C,QAAQ,IAAI,CAAK,CACnB,CAEA,QAAS,CACP,MAAI,MAAK,MAAM,SAEN,gBAAC,UAAG,uBAAqB,EAG1B,KAAK,MAAc,QAC7B,CACF,EC5BA,qBAQO,GAAM,GAA8B,CAAC,CAAE,QAAO,aAEjD,gBAAC,UACE,EAAM,IAAI,CAAC,EAAM,IAChB,gBAAC,MAAG,IAAK,GACP,gBAAC,SACC,KAAK,WACL,GAAI,OAAO,EAAK,KAChB,QAAS,CAAC,CAAC,EAAK,OAChB,SAAU,AAAC,GAAM,CACf,EAAQ,EAAE,OAAO,QAAS,CAAI,CAChC,EACA,OAAM,GACR,EACA,gBAAC,SAAM,QAAS,OAAO,EAAK,KAAM,UAAU,SAC1C,gBAAC,OAAI,MAAM,OAAO,OAAO,OAAO,QAAQ,aACtC,gBAAC,QAAK,EAAE,sHAAsH,EAC9H,gBAAC,YAAS,OAAO,gBAAgB,CACnC,EACA,gBAAC,YAAM,EAAK,IAAK,CACnB,CACF,CACD,CACH","names":[]}